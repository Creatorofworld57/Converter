{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimu2\\\\Java\\\\SpringSecurity_1805\\\\SPRING_SEC\\\\Frontend\\\\spa\\\\src\\\\ID.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Styles/ID.css'; // Импортируйте CSS файл\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Id = () => {\n  _s();\n  const location = useLocation();\n  const {\n    inputValue\n  } = location.state || {\n    inputValue: 'No ID provided'\n  };\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Добавляем состояние загрузки\n  const navigate = useNavigate(); // Используем хук для навигации, если нужно\n\n  useEffect(() => {\n    jsonFromBack();\n  }, []); // Добавляем зависимость от message, чтобы запрос выполнялся при его изменении\n\n  const jsonFromBack = async () => {\n    setLoading(true); // Устанавливаем состояние загрузки перед началом запроса\n    try {\n      const response = await fetch(`https://localhost:8080/api/programInfo/${inputValue}`, {\n        method: 'GET',\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false); // Сбрасываем состояние загрузки после завершения запроса\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this); // Показываем индикатор загрузки\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    cellPadding: \"5\",\n    cellSpacing: \"0\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Version\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Array.isArray(data) && data.length > 0 ? data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.Version\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"3\",\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Id, \"RKIFku3YflGN0ZNL4c5bkdYjBwc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Id;\nexport default Id;\nvar _c;\n$RefreshReg$(_c, \"Id\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Id","_s","location","inputValue","state","data","setData","error","setError","loading","setLoading","navigate","jsonFromBack","response","fetch","method","credentials","ok","Error","status","result","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","cellSpacing","Array","isArray","length","map","item","index","author","Version","Name","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/dimu2/Java/SpringSecurity_1805/SPRING_SEC/Frontend/spa/src/ID.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Styles/ID.css'; // Импортируйте CSS файл\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst Id = () => {\r\n    const location = useLocation();\r\n    const { inputValue } = location.state || { inputValue: 'No ID provided' };\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true); // Добавляем состояние загрузки\r\n    const navigate = useNavigate(); // Используем хук для навигации, если нужно\r\n\r\n    useEffect(() => {\r\n        jsonFromBack();\r\n    }, []); // Добавляем зависимость от message, чтобы запрос выполнялся при его изменении\r\n\r\n    const jsonFromBack = async () => {\r\n        setLoading(true); // Устанавливаем состояние загрузки перед началом запроса\r\n        try {\r\n            const response = await fetch(`https://localhost:8080/api/programInfo/${inputValue}`, {\r\n                method: 'GET',\r\n                credentials: \"include\"\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n\r\n            const result = await response.json();\r\n            setData(result);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false); // Сбрасываем состояние загрузки после завершения запроса\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Показываем индикатор загрузки\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\">\r\n            <thead>\r\n            <tr>\r\n                <th>Author</th>\r\n                <th>Version</th>\r\n                <th>Name</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {Array.isArray(data) && data.length > 0 ? (\r\n                data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td>{item.author}</td>\r\n                        <td>{item.Version}</td>\r\n                        <td>{item.Name}</td>\r\n                    </tr>\r\n                ))\r\n            ) : (\r\n                <tr>\r\n                    <td colSpan=\"3\">No data available</td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Id;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}