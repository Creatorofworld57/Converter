{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimu2\\\\Java\\\\SpringSecurity_1805\\\\SPRING_SEC\\\\Frontend\\\\spa\\\\src\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Styles/Registr.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [roles, setRoles] = useState('');\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault(); // предотвращаем стандартное поведение отправки формы\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('password', password);\n    formData.append('roles', roles);\n    formData.append('file', file);\n    try {\n      const response = await fetch('https://localhost:8080/api/user', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        navigate('/');\n      } else {\n        alert('Ошибка при отправке данных');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Ошибка при отправке данных');\n    }\n  };\n  const checking = async () => {\n    const response = await fetch('https://localhost:8080/api/checking', {\n      method: 'GET'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"userForm\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Enter your Name\",\n        value: name,\n        onChange: checking,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"roles\",\n        name: \"roles\",\n        placeholder: \"Enter your Role\",\n        value: roles,\n        onChange: e => setRoles(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-input-label\",\n          htmlFor: \"file\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          name: \"file\",\n          onChange: e => setFile(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"but\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Back\",\n      onClick: () => navigate('/'),\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"dg6tinVDdB2pfw6sk64WF8IBZzA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UserForm","_s","name","setName","password","setPassword","roles","setRoles","file","setFile","navigate","handleSubmit","event","preventDefault","formData","FormData","append","response","fetch","method","body","ok","alert","error","console","checking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","encType","type","placeholder","value","onChange","required","e","target","htmlFor","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dimu2/Java/SpringSecurity_1805/SPRING_SEC/Frontend/spa/src/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Styles/Registr.css'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst UserForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [roles, setRoles] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const navigate =useNavigate();\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // предотвращаем стандартное поведение отправки формы\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('password', password);\r\n        formData.append('roles', roles);\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await fetch('https://localhost:8080/api/user', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            if (response.ok) {\r\n               navigate('/') ;\r\n            } else {\r\n                alert('Ошибка при отправке данных');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert('Ошибка при отправке данных');\r\n        }\r\n    };\r\n    const checking=async () => {\r\n        const response = await fetch('https://localhost:8080/api/checking',{method:'GET'})\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>Enter Data</h1>\r\n            <form id=\"userForm\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter your Name\"\r\n                    value={name}\r\n                    onChange={checking}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter your Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"roles\"\r\n                    name=\"roles\"\r\n                    placeholder=\"Enter your Role\"\r\n                    value={roles}\r\n                    onChange={(e) => setRoles(e.target.value)}\r\n                    required\r\n                />\r\n                <div className=\"file-input-container\">\r\n                    <label className=\"file-input-label\" htmlFor=\"file\">Выберите аватар</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        onChange={(e) => setFile(e.target.files[0])}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button id=\"but\" type=\"submit\">Send</button>\r\n            </form>\r\n            <button className=\"Back\" onClick={() => navigate('/')}>Назад</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}