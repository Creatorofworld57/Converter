{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimu2\\\\Java\\\\SpringSecurity_1805\\\\SPRING_SEC\\\\Frontend\\\\spa\\\\src\\\\Profile.jsx\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './Styles/Profile.css';\nimport { useNavigate } from 'react-router-dom';\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [imagePath, setImagePath] = useState('12');\n  const navigate = useNavigate();\n  const redirectTo = url => {\n    navigate(url);\n  };\n  const Toolbar = () => {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const [isRotated, setIsRotated] = useState(false);\n    const [user, setUser] = useState(null);\n    const toggleToolbar = () => {\n      setIsOpen(!isOpen);\n      setIsRotated(!isRotated);\n    };\n    useEffect(() => {\n      getUserInfo();\n    }, []);\n    const getUserInfo = async () => {\n      try {\n        const response = await fetch('https://localhost:8080/api/userInfo', {\n          headers: {\n            'Cache-Control': 'no-cache'\n          },\n          credentials: 'include'\n        });\n        const data = await response.text();\n        setImagePath(data);\n      } catch (error) {\n        console.error('Error fetching user info', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"burger-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back_up\",\n        onClick: () => redirectTo('/'),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Toolbar, \"WSFCBWT4ed6XLq/M7ZLGJqTGFl4=\");\n  return /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n_s2(Profile, \"axeg5wVzKKyxSnMg4KxxRl1rJ1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Menu","jsxDEV","_jsxDEV","Profile","_s2","_s","$RefreshSig$","imagePath","setImagePath","navigate","redirectTo","url","Toolbar","isOpen","setIsOpen","isRotated","setIsRotated","user","setUser","toggleToolbar","getUserInfo","response","fetch","headers","credentials","data","text","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dimu2/Java/SpringSecurity_1805/SPRING_SEC/Frontend/spa/src/Profile.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './Styles/Profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Menu from \"./Menu\";\r\nconst Profile = () => {\r\n    const [imagePath, setImagePath] = useState('12');\r\n    const navigate = useNavigate();\r\n    const redirectTo=(url)=>{\r\n\r\n        navigate(url);\r\n    }\r\n\r\n\r\n    const Toolbar = () => {\r\n        const [isOpen, setIsOpen] = useState(false);\r\n        const [isRotated, setIsRotated] = useState(false);\r\n        const [user, setUser] = useState(null);\r\n\r\n        const toggleToolbar = () => {\r\n            setIsOpen(!isOpen);\r\n            setIsRotated(!isRotated);\r\n        };\r\n\r\n        useEffect(() => {\r\n            getUserInfo();\r\n        }, []);\r\n\r\n\r\n\r\n        const getUserInfo = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:8080/api/userInfo', {\r\n                    headers: {\r\n                        'Cache-Control': 'no-cache',\r\n                    },\r\n                    credentials: 'include'\r\n                });\r\n\r\n                    const data = await response.text();\r\n                    setImagePath(data);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching user info', error);\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <nav>\r\n\r\n                      <div  className=\"burger-btn\">\r\n                          <span/>\r\n                      </div>\r\n\r\n                    </nav>\r\n                    <main>\r\n\r\n                    </main>\r\n\r\n\r\n                </div>\r\n                <button className=\"back_up\" onClick={() => redirectTo('/')}>Назад</button>\r\n                <Menu/>\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return <Toolbar/>;\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}